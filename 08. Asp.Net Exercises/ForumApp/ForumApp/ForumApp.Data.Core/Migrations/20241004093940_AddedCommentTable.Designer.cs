// <auto-generated />
using System;
using ForumApp.Data.Core;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace ForumApp.Data.Core.Migrations
{
    [DbContext(typeof(ForumAppContext))]
    [Migration("20241004093940_AddedCommentTable")]
    partial class AddedCommentTable
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.8")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("ForumApp.Data.Models.Comment", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Content")
                        .IsRequired()
                        .HasMaxLength(2000)
                        .HasColumnType("nvarchar(2000)");

                    b.Property<Guid>("PostId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Username")
                        .IsRequired()
                        .HasMaxLength(40)
                        .HasColumnType("nvarchar(40)");

                    b.HasKey("Id");

                    b.HasIndex("PostId");

                    b.ToTable("Comments");
                });

            modelBuilder.Entity("ForumApp.Data.Models.Post", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Content")
                        .IsRequired()
                        .HasMaxLength(2000)
                        .HasColumnType("nvarchar(2000)");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)");

                    b.HasKey("Id");

                    b.ToTable("Posts");

                    b.HasData(
                        new
                        {
                            Id = new Guid("69e79e53-ff51-4371-bcae-07b7346c3f6d"),
                            Content = "Content for post 1.",
                            IsDeleted = false,
                            Title = "Post 1"
                        },
                        new
                        {
                            Id = new Guid("93070e41-5e9a-4ee0-b664-94bbdd538320"),
                            Content = "Content for post 2.",
                            IsDeleted = false,
                            Title = "Post 2"
                        },
                        new
                        {
                            Id = new Guid("75f5061c-86c2-42cb-820f-867b0b9a503e"),
                            Content = "Content for post 3.",
                            IsDeleted = false,
                            Title = "Post 3"
                        },
                        new
                        {
                            Id = new Guid("c79a031b-94df-4ab8-af83-262b02c95a4d"),
                            Content = "Content for post 4.",
                            IsDeleted = false,
                            Title = "Post 4"
                        },
                        new
                        {
                            Id = new Guid("95dc603f-f95b-4418-a1d3-07629ba3e433"),
                            Content = "Content for post 5.",
                            IsDeleted = false,
                            Title = "Post 5"
                        });
                });

            modelBuilder.Entity("ForumApp.Data.Models.Comment", b =>
                {
                    b.HasOne("ForumApp.Data.Models.Post", "Post")
                        .WithMany("Comments")
                        .HasForeignKey("PostId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Post");
                });

            modelBuilder.Entity("ForumApp.Data.Models.Post", b =>
                {
                    b.Navigation("Comments");
                });
#pragma warning restore 612, 618
        }
    }
}
